- content_for :form do
  = form_for reply, html: {id: 'post_form'} do |f|
    %b Reply
    .view-button#rtf{class: ('selected' if (params[:editor_mode] || current_user.default_editor) == 'rtf')} Rich Text
    .view-button#html{class: ('selected' if (params[:editor_mode] || current_user.default_editor) == 'html')} HTML
    .view-button#editor-help{title: 'Help'} ?
    %br
    = unread_warning.try(:html_safe)
    %br
    = f.hidden_field :post_id
    = f.hidden_field :character_id
    = f.hidden_field :icon_id
    = f.hidden_field :character_alias_id
    = hidden_field_tag :allow_dupe, @allow_dupe
    = hidden_field_tag :editor_mode, params[:editor_mode] || current_user.default_editor
    - if params[:per_page]
      = hidden_field_tag :per_page, params[:per_page]
    #post-form-wrapper
      = f.text_area :content, class: 'tinymce'
      - unless current_user.id == reply.user_id
        %b= f.label :audit_comment, 'Moderator note'
        %br
        = f.text_area :audit_comment, placeholder: 'Explain reason for moderation here', class: 'mod'
        %br
      = submit_tag (reply.new_record? ? 'Post' : 'Save'), class: 'button', id: 'submit_button', data: { disable_with: 'Saving...' }
      = submit_tag "Preview", class: 'button', id: 'preview_button', name: 'button_preview', data: { disable_with: 'Previewing...' }
      - if reply.new_record?
        = submit_tag "Save Draft", class: 'button', id: 'draft_button', data: { disable_with: 'Drafting...' }, name: 'button_draft'
    - if reply.post.author_for(current_user)&.private_note.present?
      %hr.clear
      %b Your Post Notes
      &nbsp;
      = link_to edit_post_path(reply.post, anchor: 'post-notes') do
        = image_tag "icons/pencil.png".freeze, title: 'Edit', alt: 'Edit'
      %br
      = sanitize_written_content(reply.post.author_for(current_user).private_note)
    - else
      %br
    = render 'posts/editor_help'

= render 'posts/editor', item: reply
