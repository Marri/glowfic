!!!
%html
  %head
    %title= (Rails.env.development? ? 'DEV: ' : '') + (@page_title ? @page_title + " | Glowfic Constellation" : "Glowfic Constellation")

    / Meta
    %meta{charset: 'utf-8'}
    %meta{name: 'viewport', content: 'width=device-width'}
    = csrf_meta_tags

    / SEO canonical
    - if @meta_canonical.present?
      %link{rel: 'canonical', href: @meta_canonical}

    / Stylesheets
    = stylesheet_link_tag 'application'
    - if current_user.try(:layout).present?
      = stylesheet_link_tag "layouts/#{current_user.layout}"

    / Favicons
    %meta{name: "apple-mobile-web-app-title", content: "Glowfic Constellation"}
    %meta{name: "application-name", content: "Glowfic Constellation"}
    %meta{name: "msapplication-config", content: asset_path('favicons/browserconfig.xml')}
    %meta{name: "theme-color", content: "#ffffff"}
    = favicon_link_tag 'favicons/favicon.ico'
    = favicon_link_tag 'favicons/favicon-32x32.png', type: 'image/png', rel: 'icon', sizes: '32x32'
    = favicon_link_tag 'favicons/favicon-16x16.png', type: 'image/png', rel: 'icon', sizes: '16x16'
    = favicon_link_tag 'favicons/apple-touch-icon.png', type: 'image/png', rel: 'apple-touch-icon', sizes: '180x180'
    %link{rel: 'mask-icon', href: asset_path('favicons/safari-pinned-tab.svg'), color: '#2b5797'}
    %link{rel: 'manifest', href: asset_path('favicons/manifest.json')}

    = include_gon
  %body
    = render partial: 'layouts/navigation'
    - if content_for?(:breadcrumbs)
      .flash.breadcrumbs= content_for :breadcrumbs
    - if flash[:error].is_a?(Hash)
      .flash.error
        - if flash[:error].has_key? :image
          = image_tag flash[:error][:image], class: 'vmid'.freeze
        = flash[:error][:message]
        - if flash[:error].has_key? :array
          %ul
            - flash[:error][:array].each do |error|
              %li= error
      - flash.delete(:error)
    - flash.keys.each do |key|
      - if key == :pass
        .flash{class: 'error'.freeze}= flash[key].html_safe
      - else
        .flash{:class=>key}= flash[key]
    - if content_for?(:flashes)
      = content_for :flashes
    - if logged_in?
      - if current_user.messages.where(unread: true).exists?
        - current_user.messages.where(unread: true).each do |message|
          .flash.inbox
            New message from
            = message_sender(message)
            &ndash;
            = link_to message.unempty_subject, message_path(message)
    #content= yield

  = javascript_include_tag 'application'.freeze
  - (@javascripts || []).each do |javascript|
    = javascript_include_tag javascript
